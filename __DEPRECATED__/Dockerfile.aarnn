# Use an official C++ runtime as a parent image
FROM ubuntu:22.04

# Set the working directory in the container to /app
WORKDIR /app

# Copy the compiled executable from your host to the current location in your docker image
COPY ./bin/AARNN /app/AARNN


#Database configuration connection infromation
COPY ./configure/db_connection.conf /app/db_connection.conf 

#Simulation data
COPY ./configure//simulation.conf /app/simulation.conf 

# Make port 80 available to the world outside this container (optional)
EXPOSE 80

# Install necessary libraries for running the application
RUN apt-get update
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get install -y \
    libpqxx-dev \
    pulseaudio \
    libfftw3-3 \
    libboost-all-dev \
    libpostproc-dev \
    libavdevice-dev \
    libportaudio2 \
    libqt5opengl5 \
    iputils-ping \
    libvtk9-dev \
    python3-vtk9 \
    qtcreator \
    qtbase5-dev \
    vtk9
ENV DEBIAN_FRONTEND=dialog

# Run the application when the container launches
CMD ["./AARNN"]
