# version: '3.8'
services:
  postgres:
    container_name: aarnn_postgres
    image: aarnn_postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -t 5 -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    build:
      dockerfile: Dockerfile.postgres
    env_file:
      - ./.env
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 2000M
      restart_policy:
        condition: on-failure
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT_EXPOSE}:5432"
    environment:
      POSTGRES_PASSWORD    : ${POSTGRES_PASSWORD}
      POSTGRES_USER        : ${POSTGRES_USER}
      POSTGRES_PORT_EXPOSE : ${POSTGRES_PORT_EXPOSE}
      POSTGRES_HOST        : ${POSTGRES_HOST}
    networks:
      - aarnn_net

  aarnn:
    container_name: aarnn
    image: aarnn
    build:
      dockerfile: Dockerfile.aarnn
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1000m
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DISPLAY           : unix${DISPLAY}
      PULSE_SERVER      : unix:/run/user/1000/pulse/native
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    networks:
      - aarnn_net
    devices:
      - /dev/snd:/dev/snd
      - /dev/dri/card0:/dev/dri/card0

  visualiser:
    container_name: visualiser
    image: visualiser
    build:
      dockerfile: Dockerfile.visualiser
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1000m
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DISPLAY           : unix${DISPLAY}
      PULSE_SERVER      : unix:/run/user/1000/pulse/native
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    networks:
      - aarnn_net
    devices:
      - /dev/snd:/dev/snd
      - /dev/dri/card0:/dev/dri/card0

networks:
  aarnn_net:
    driver: bridge
    name: aarnn_net
    external: false