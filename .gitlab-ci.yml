stages:
  - build
  - test
  - docker_build
  - docker_push

variables:
  BUILD_TYPE: "Release"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

# Job: Build the project
build:
  stage: build
  image: ubuntu:latest
  before_script:
    - sudo apt-get update && \
      apt-get install -y software-properties-common && \
      add-apt-repository ppa:ubuntu-toolchain-r/test && \
      apt-get update && \
      apt-get install -y \
      build-essential \
      cmake \
      curl \
      freeglut3-dev \
      git \
      iputils-ping \
      libasound2-dev \
      libavcodec-dev \
      libavdevice-dev \
      libavformat-dev \
      libavutil-dev \
      libboost-all-dev \
      libcap2-bin \
      libcgal-dev \
      libcurl4 \
      libcurl4-openssl-dev \
      libfftw3-dev \
      libfftw3-mpi-dev \
      libgl1-mesa-dev \
      libglew-dev \
      libglew2.2 \
      libglfw3 \
      libglfw3-dev \
      libglu1-mesa-dev \
      libgmp-dev \
      libmpfr-dev \
      libomp-dev \
      libportaudio2 \
      libportaudiocpp0 \
      libpostproc-dev \
      libpqxx-dev \
      libpulse-dev \
      libssl-dev \
      libswscale-dev \
      libswresample-dev \
      libvtk9-dev \
      libwebsocketpp-dev \
      libx11-dev \
      pkg-config \
      portaudio19-dev \
      pulseaudio \
      pulseaudio-utils \
      python3-vtk9 \
      qt5-qmake \
      qtbase5-dev \
      qtcreator \
      sudo \
      unzip \
      vtk9 \
      wget \
      xorg-dev

  script:
    - ./run.sh
    - cmake -B build -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DOpenMP_CXX_FLAGS="-fopenmp" -DOpenMP_CXX_LIB_NAMES="gomp"
    - cmake --build build --config $BUILD_TYPE
  artifacts:
    paths:
      - build/
  only:
    - branches
    - merge_requests

# Job: Test the project
test:
  stage: test
  image: ubuntu:latest
  dependencies:
    - build
  script:
    - cd build
    - ctest -C $BUILD_TYPE
  only:
    - branches
    - merge_requests

# Job: Build Docker images
docker_build:
  stage: docker_build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker info
    - echo "$GITLAB_TOKEN" | docker login ghcr.io -u "$GITLAB_USERNAME" --password-stdin
  script:
    - docker build -t ghcr.io/$GITLAB_USERNAME/aarnn:latest --build-arg POSTGRES_USER=$POSTGRES_USER --build-arg POSTGRES_PASSWORD=$POSTGRES_PASSWORD -f Dockerfile .
    - docker build -t ghcr.io/$GITLAB_USERNAME/aarnn-postgres:latest --build-arg POSTGRES_USER=$POSTGRES_USER --build-arg POSTGRES_PASSWORD=$POSTGRES_PASSWORD -f Dockerfile.postgres .
  artifacts:
    paths:
      - docker_images/
  only:
    - main
  needs:
    - build

# Job: Push Docker images
docker_push:
  stage: docker_push
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker info
    - echo "$GITLAB_TOKEN" | docker login ghcr.io -u "$GITLAB_USERNAME" --password-stdin
  script:
    - docker push ghcr.io/$GITLAB_USERNAME/aarnn:latest
    - docker push ghcr.io/$GITLAB_USERNAME/aarnn-postgres:latest
  only:
    - main
  needs:
    - docker_build
