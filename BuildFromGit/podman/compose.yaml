version: '3.8'
services:
  vault:
    container_name: aarnn_vault
    image: aarnn_vault
    build:
      dockerfile: ./Containerfile.vault
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1000m
    networks:
      - aarnn_net

  postgres:
    container_name: aarnn_postgres
    image: aarnn_postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    build:
      dockerfile: ./Containerfile.postgres
    env_file:
      - ../../.env
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 2000M
      restart_policy:
        condition: on-failure
    depends_on:
      - vault
    ports:
      - "${POSTGRES_PORT_EXPOSE}:5432"
    environment:
      POSTGRES_PASSWORD    : ${POSTGRES_PASSWORD}
      POSTGRES_USERNAME    : ${POSTGRES_USERNAME}
      POSTGRES_PORT_EXPOSE : ${POSTGRES_PORT_EXPOSE}
    networks:
      - aarnn_net

  builder:
    container_name: builder
    image: builder
    build:
      dockerfile: ./Containerfile.compiler
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 2000m
    depends_on:
      - vault
    networks:
      - aarnn_net

  aarnn:
    container_name: aarnn
    image: aarnn
    build:
      dockerfile: ./Containerfile.aarnn
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 2000m
    depends_on:
      builder:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_PASSWORD : ${POSTGRES_PASSWORD}
      POSTGRES_DBNAME   : ${POSTGRES_DBNAME}
      POSTGRES_USERNAME : ${POSTGRES_USERNAME}
      POSTGRES_PORT     : ${POSTGRES_PORT}
    networks:
      - aarnn_net

  visualiser:
    container_name: visualiser
    image: visualiser
    build:
      dockerfile: ./Containerfile.visualiser
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1000m
    depends_on:
      aarnn:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_PASSWORD : ${POSTGRES_PASSWORD}
      POSTGRES_DBNAME   : ${POSTGRES_DBNAME}
      POSTGRES_USERNAME : ${POSTGRES_USERNAME}
      POSTGRES_PORT     : ${POSTGRES_PORT}
    networks:
      - aarnn_net
networks:
  aarnn_net:
    driver: bridge
    name: aarnn_net
    external: false