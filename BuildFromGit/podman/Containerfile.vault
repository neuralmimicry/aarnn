FROM compiler-image

# Define environment variables
ENV VAULT_VERSION=1.17.0
ENV VAULT_ADDR='http://0.0.0.0:8200'
ENV VAULT_API_ADDR='http://vault:8200'
ENV VAULT_DEV_LISTEN_ADDRESS='vault:8200'
# ENV VAULT_DEV_ROOT_TOKEN_ID='root'

# Create necessary directories
RUN mkdir -p /opt/vault/data /etc/vault.d /opt/vault/logs

# Download and install Vault
RUN curl -fsSL https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip -o /tmp/vault.zip \
    && unzip /tmp/vault.zip -d /usr/local/bin/ \
    && rm /tmp/vault.zip

# Add Vault user and set permissions
RUN useradd -r -s /bin/bash vault \
    && mkdir -p /home/vault \
    && chown -R vault:vault /opt/vault/data /etc/vault.d /opt/vault/logs /home/vault \
    && chmod +x /usr/local/bin/vault

# Allow the vault user to use sudo without a password
RUN echo "vault ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/vault

# Copy the scripts into the container
COPY --from=compiler-image /app/source/BuildFromGit/generic/init_vault.sh /usr/local/bin/
COPY --from=compiler-image /app/source/BuildFromGit/generic/start_vault.sh /usr/local/bin/
COPY --from=compiler-image /app/source/.env /

# Debugging
RUN cat /.env

# Set permissions on the scripts
RUN chmod +x /usr/local/bin/init_vault.sh /usr/local/bin/start_vault.sh
RUN chown vault:vault /usr/local/bin/init_vault.sh /usr/local/bin/start_vault.sh /.env

# Expose the port Vault listens on
EXPOSE 8200

# Switch to the vault user
USER vault

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/start_vault.sh"]