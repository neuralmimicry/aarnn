name: AARNN

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          apt-get update && \
          apt-get install -y software-properties-common && \
          add-apt-repository ppa:ubuntu-toolchain-r/test && \
          apt-get update && \
          apt-get install -y \ 
          build-essential \
          cmake \
          curl \
          freeglut3-dev \
          git \
          iputils-ping \
          libasound2-dev \
          libavcodec-dev \
          libavdevice-dev \
          libavformat-dev \
          libavutil-dev \
          libboost-all-dev \
          libcap2-bin \
          libcgal-dev \
          libcurl4 \
          libcurl4-openssl-dev \
          libfftw3-dev \
          libfftw3-mpi-dev \
          libgl1-mesa-dev \
          libglew-dev \
          libglew2.2 \
          libglfw3 \
          libglfw3-dev \
          libglu1-mesa-dev \
          libgmp-dev \
          libmpfr-dev \
          libomp-dev \
          libportaudio2 \
          libportaudiocpp0 \
          libpostproc-dev \
          libpqxx-dev \
          libpulse-dev \
          libssl-dev \
          libswscale-dev \
          libswresample-dev \
          libvtk9-dev \
          libwebsocketpp-dev \
          libx11-dev \
          pkg-config \
          portaudio19-dev \
          pulseaudio \
          pulseaudio-utils \
          python3-vtk9 \
          qt5-qmake \
          qtbase5-dev \
          qtcreator \
          sudo \
          unzip \
          vtk9 \
          wget \
          xorg-dev

      - name: Configure build environment
        run: ./run.sh

      - name: Configure CMake with OpenMP
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DOpenMP_CXX_FLAGS="-fopenmp" -DOpenMP_CXX_LIB_NAMES="gomp"

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/aarnn:latest
          secrets: |
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}

      - name: Build and push Docker image - PostgreSQL
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.postgres
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/aarnn-postgres:latest
          secrets: |
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
